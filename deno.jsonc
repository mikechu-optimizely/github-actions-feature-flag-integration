{
  "imports": {
    "@std/assert": "jsr:@std/assert@^1.0.7",
    "@std/testing": "jsr:@std/testing@^1.0.5",
    "@std/http": "jsr:@std/http@^1.0.12",
    "@std/log": "jsr:@std/log@^0.224.9",
    "@std/path": "jsr:@std/path@^1.0.8",
    "@std/fs": "jsr:@std/fs@^1.0.5",
    "@std/json": "jsr:@std/json@^1.0.1",
    "@std/crypto": "jsr:@std/crypto@^1.0.3",
    "@std/yaml": "jsr:@std/yaml@^1.0.9",
    "@std/cli": "jsr:@std/cli@^1.0.7",
    "@std/testing/bdd": "jsr:@std/testing@^1.0.5/bdd"
  },
  "compilerOptions": {
    "lib": ["deno.window"],
    "strict": true
  },
  "lint": {
    "rules": {
      "tags": ["recommended"]
    }
  },
  "fmt": {
    "useTabs": false,
    "lineWidth": 100,
    "indentWidth": 2,
    "semiColons": true,
    "singleQuote": false,
    "proseWrap": "preserve",
    "include": ["src/"]
  },
  "test": {
    "include": ["src/**/*.test.ts", "src/**/*.serial.test.ts"],
    "exclude": ["src/**/*.bench.ts"]
  },
  "tasks": {
    "start": "deno run --allow-all src/main.ts",
    // Serial tests: Run tests that require sequential execution due to global state manipulation
    "test:serial": "deno test --allow-all --quiet src/**/*.serial.test.ts",
    // Parallel tests: Run all other tests in parallel for speed, excluding serial tests
    "test:parallel": "deno test --allow-all --quiet --parallel --ignore='**/*.serial.test.ts' src/",
    // Main test task: Run serial tests first, then parallel tests
    "test": {
      "dependencies": ["test:serial"],
      "command": "deno task test:parallel"
    },
    "test:watch": "deno test --allow-all --quiet --watch src/",
    // Coverage tasks: Generate coverage reports for both serial and parallel tests
    "test:coverage:serial": "deno test --allow-all --quiet --coverage=coverage src/**/*.serial.test.ts",
    "test:coverage:parallel": "deno test --allow-all --quiet --coverage=coverage --parallel --ignore='**/*.serial.test.ts' src/",
    "test:coverage:report": "deno coverage coverage --lcov --output=coverage/coverage.lcov",
    "test:coverage": {
      "dependencies": ["test:coverage:serial"],
      "command": "deno task test:coverage:parallel && deno task test:coverage:report"
    },
    // CI tasks: Run tests with JUnit reporting for CI/CD pipelines
    "test:ci:serial": "deno test --allow-all --quiet --coverage=coverage --reporter=junit --junit-path=./reports/test-results-serial.xml src/**/*.serial.test.ts",
    "test:ci:parallel": "deno test --allow-all --quiet --coverage=coverage --reporter=junit --junit-path=./reports/test-results-parallel.xml --parallel --ignore='**/*.serial.test.ts' src/",
    "test:ci": {
      "dependencies": ["test:ci:serial"],
      "command": "deno task test:ci:parallel"
    },
    "lint": "deno lint src/",
    "lint:fix": "deno lint --fix src/",
    "fmt": "deno fmt src/",
    "fmt:check": "deno fmt --check src/",
    "check": "deno check src/**/*.ts",
    "precommit": "deno task fmt && deno task lint && deno task check && deno task test",
    "ci": "deno task fmt:check && deno task lint && deno task check && deno task test:ci"
  },
  "exclude": [
    "node_modules",
    "coverage"
  ]
}
